spring.main.banner-mode=off

logging.level.org.hibernate=WARN
logging.level.org.springframework=WARN
logging.level.org.apache.activemq=WARN

spring.datasource.url=jdbc:mysql://93.188.163.180:3306/crvn_clube_livro?useSSL=false
spring.datasource.username=admin
spring.datasource.password=zsb4@;8)Y(U5g5BJ
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.show-sql = false
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

activemq.broker.url=failover:(tcp://93.188.163.180:61616)?timeout=5000
activemq.broker.username=admin
activemq.broker.password=9h2z2qLo
activemq.broker.topic.boletos=crvn.boletos
activemq.broker.queue.cadastro.pessoas=crvn.pessoas.cadastro
activemq.broker.client.id.prefix=clube_livro_client

cadastro.pessoas.rest.service=http://localhost:6060/pessoa

# Espera 1 minuto antes da primeira execução do JOB processador de integrantes pendentes
integrante.pendente.initial.delay=60000
# As execuções do JOB processador de integrantes pendentes ocorrerão à cada 1 minuto
integrante.pendente.fixed.delay=60000

# Espera 30 minutos antes da primeira execução do JOB de cadastro de pessoas
cadastro.pessoa.initial.delay=1800000
# As execuções do JOB de cadastro de pessoas ocorrerão à cada 30 minutos
cadastro.pessoa.fixed.delay=1800000